/*!
 * jquery-drawer v3.2.2
 * Flexible drawer menu using jQuery, iScroll and CSS.
 * http://git.blivesta.com/drawer
 * License : MIT
 * Author : blivesta <design@blivesta.com> (http://blivesta.com/)
 */

!function(e){e(angular.element)}(function(e){"use strict";var t=void 0!==document.ontouchstart,n={},r={init:function(t){return t=angular.extend({iscroll:{mouseWheel:!0,preventDefault:!1},showOverlay:!0},t),r.settings={state:!1,events:{opened:"drawer_opened",closed:"drawer_closed"},dropdownEvents:{opened:"shown.bs.dropdown",closed:"hidden.bs.dropdown"}},r.settings.class=angular.extend({nav:"drawer-nav",toggle:"drawer-toggle",overlay:"drawer-overlay",open:"drawer-open",close:"drawer-close",dropdown:"drawer-dropdown"},t.class),angular.forEach(e(this),function(o){var s=o,a=e(o);a.data("drawer")||(t=angular.extend({},t),a.data("drawer",{options:t}),r.refresh.call(s),t.showOverlay&&r.addOverlay.call(s),e(document.querySelector("."+r.settings.class.toggle)).on("click",n.click=function(){return r.toggle.call(s),s.iScroll.refresh()}),e(window).on("resize",n.resize=function(){return e(".drawer-overlay").addClass("overlay-on"),s.iScroll.refresh()}),e(document.querySelector("."+r.settings.class.dropdown)).on(r.settings.dropdownEvents.opened,function(){return s.iScroll.refresh()}).on(r.settings.dropdownEvents.closed,function(){return s.iScroll.refresh()}))})},refresh:function(){this.iScroll=new IScroll("."+r.settings.class.nav,e(this).data("drawer").options.iscroll)},addOverlay:function(){var t=e(this),n=e("<div>").addClass(r.settings.class.overlay+" "+r.settings.class.toggle);return t.append(n)},toggle:function(){var e=this;return r.settings.state?r.close.call(e):r.open.call(e)},open:function(){var o=e(this);return t&&o.on("touchmove",n.touchmove=function(e){e.preventDefault()}),o.removeClass(r.settings.class.close).addClass(r.settings.class.open).drawerCallback(function(){r.settings.state=!0,o.triggerHandler(r.settings.events.opened)})},close:function(){var o=e(this);return t&&o.off("touchmove",n.touchmove),o.removeClass(r.settings.class.open).addClass(r.settings.class.close).drawerCallback(function(){r.settings.state=!1,o.triggerHandler(r.settings.events.closed)})},destroy:function(){return angular.forEach(e(this),function(t){var o=t,s=e(t);e(document.querySelector("."+r.settings.class.toggle)).off("click",n.click),e(window).off("resize",n.resize),e(document.querySelector("."+r.settings.class.dropdown)).off(r.settings.dropdownEvents.opened),e(document.querySelector("."+r.settings.class.dropdown)).off(r.settings.dropdownEvents.closed),o.iScroll.destroy(),s.removeData("drawer").find("."+r.settings.class.overlay).remove()})}};angular.element.prototype.drawerCallback=function(t){return angular.forEach(e(this),function(n){var r=e(n);r.on("transitionend",function(){return r.off("transitionend"),t.call(n)}),r.on("webkitTransitionEnd",function(){return r.off("webkitTransitionEnd"),t.call(n)})})},angular.element.prototype.drawer=function(e){if(r[e])return r[e].apply(this,Array.prototype.slice.call(arguments,1));if("object"!=typeof e&&e)throw new Error("Method "+e+" does not exist on jQuery.drawer");return r.init.apply(this,arguments)}});